.col-md-* means for medium devices, columns will be horizontal in row. For any size lesser than medium, the columns will stack vertically

If don't want to stack on smaller devices, refer http://getbootstrap.com/css/#grid-example-mixed
If you don't want to stack vertically on smaller devices, use multiple classes:
.col-xs-* .col-sm-* .col-md-*
Then respective class will be applied for respective device size 

.col-md-offset-2 .col-md-10 
means leave 2 blocks to the left and occupy remaining 10 blocks to the right.

.container or .container-fluid is first class inside body. They center align in the page and wrap to content

Quick version: .container has one fixed width for each screen size in bootstrap (xs,sm,md,lg); .container-fluid expands to fill the available width.

The difference between container and container-fluid comes from these lines of CSS:

@media (min-width: 568px) {
  .container {
    width: 550px;
  }
}
@media (min-width: 992px) {
  .container {
    width: 970px;
  }
}
@media (min-width: 1200px) {
  .container {
    width: 1170px;
  }
}

.container-fluid {
  width: 100%;
}

Depending on the width of the viewport that the webpage is being viewed on, the container class gives its div a specific fixed width. These lines don't exist in any form for container-fluid, so its width changes every time the viewport width changes.

So for example, say your browser window is 1000px wide. As it's greater than the min-width of 992px, your .container element will have a width of 970px. You then slowly widen your browser window. The width of your .container won't change until you get to 1200px, at which it will jump to 1170px wide and stay that way for any larger browser widths.

Your .container-fluid element, on the other hand, will constantly resize as you make even the smallest changes to your browser width.